// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  name                   String?
  email                  String    @unique
  emailVerified          DateTime?
  password               String?
  isVerified             Boolean   @default(false)
  firstMember            String?
  secondMember           String?
  thirdMember            String?
  fourthMember           String?
  role                   Role      @default(USER)
  emailVerificationToken String?
  otpExpiration          DateTime?
  image                  String?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  accounts               Account[]
}

model VerificationRequest {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
